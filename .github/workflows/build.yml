---
name: Build

on:
  pull_request:
    branches: ['**']
  push:
    branches: ["main"]

concurrency:
  # Group workflows by ref (branch or PR number).
  # Cancel in-progress runs on the same branch for new pushes.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  # Needed to write releases.
  contents: write

jobs:
  # =================================================================
  #           🧪 1. LINT AND UNIT TEST
  # =================================================================
  validate:
    name: 🧪 Lint & Unit Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          # Cache Gradle dependencies and wrappers for faster builds.
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Run Lint and Unit Tests
        run: ./gradlew lintDebug testDebugUnitTest

      - name: Upload Test Reports
        if: always() # Always run this step to upload reports even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: test-and-lint-reports
          path: |
            **/build/reports/
          retention-days: 7

  # =================================================================
  #           🏗️ 2. BUILD RELEASE ARTIFACT (AAB & APK)
  # =================================================================
  build:
    name: 🏗️ Build Release App Bundle & APK
    runs-on: ubuntu-latest
    needs: validate
    outputs:
      versionName: ${{ steps.get_version.outputs.versionName }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Decode Keystore and Setup Signing
        id: setup_signing
        env:
          SIGNING_KEY_STORE_BASE64: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
        run: |
          KEYSTORE_PATH=${{ runner.temp }}/keystore.jks
          echo $SIGNING_KEY_STORE_BASE64 | base64 --decode > $KEYSTORE_PATH
          echo "keyStorePath=$KEYSTORE_PATH" >> $GITHUB_OUTPUT

      - name: Get Version Name from Gradle
        id: get_version
        run: |
          VERSION_NAME=$(./gradlew -q printVersionName)
          echo "versionName=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "Version found: $VERSION_NAME"

      - name: Build Release App Bundle and APK
        run: ./gradlew bundleRelease assembleRelease
        env:
          # These secrets are used by your app's build.gradle for signing.
          SIGNING_KEY_STORE_PATH: ${{ steps.setup_signing.outputs.keyStorePath }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

      - name: Upload App Bundle Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-bundle-release
          path: '**/build/outputs/bundle/release/*.aab'
          retention-days: 7

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-apk-release
          path: '**/build/outputs/apk/release/*.apk'
          retention-days: 7

  # =================================================================
  #           🚀 3. CREATE GITHUB RELEASE
  # =================================================================
  release:
    name: 🚀 Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Download App Bundle
        uses: actions/download-artifact@v4
        with:
          name: app-bundle-release
          path: artifacts/aab

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: app-apk-release
          path: artifacts/apk

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: |
            artifacts/aab/*.aab
            artifacts/apk/*.apk
          tag: v${{ needs.build.outputs.versionName }}
          name: "Release v${{ needs.build.outputs.versionName }}"
          generateReleaseNotes: true
